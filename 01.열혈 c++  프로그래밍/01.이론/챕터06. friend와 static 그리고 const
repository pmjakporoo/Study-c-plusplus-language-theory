1. const 객체
  - const SoSimple sim(20); 과 같이 객체를 상수화할 수 있다.
  - const 객체는 const 멤머 함수만 호출이 가능하다.
  - 멤버변수에 저장된 값을 수정하지 않는 함수는 가급적 const로 선언해서, const객체에서도 호출이 가능하도록 할 필요가 있다.

2. const와 함수 오버로딩
  - const의 선언 유무도 함수 오버로딩의 조건에 해당이 된다.
    ex)
        void SimpleFunc() { ... }
        void SimpleFunc() const { ... }

3. 클래스의 friend 선언
  - A클래스가 B클래스를 대상으로 friend 선언을 하면, B클래스는 A클래스의 private 멤버에 직접 접근이 가능하다.
  - 단, A클래스도 B클래스의 private 멤버에 직접 접근이 가능하려면, B클래스가 A클래스를 대상으로 friend 선언을 해줘야 한다.
  - friend 선언은 클래스 내에 어디든 위치할 수 있다. private에 존재하든, public에 존재하든 상관없다.

4. friend 선언은 필요한 상황에서 극히 소극적으로 사용해야한다.

5. 함수의 frined 선언
  - 전역함수를 대상으로도, 클래스의 멤버함수를 대상으로도 frined 선언이 가능하다.
  - 물론 frined로 선언된 함수는 자신이 선언된 클래스의 private 영역이 접근이 가능하다.

6. c언어에서 static 
  - 지역변수 static: 초기화는 1번만되고, 함수를 빠져나가도 소멸되지 않는다.
  - 전역변수 static: 해당 파일에서만 참조를 허용한다. (외부파일에서 extern 키워드를 사용하더라도 참조할 수 없다.)
  - 함수 static: 해당 파일에서만 참조를 허용한다. (외부파일에서 extern 키워드를 사용하더라도 참조할 수 없다.)

7. static 멤버변수(클래스 변수)
 - static 멤버변수는 클래스 변수라고도 한다. 일반적인 멤버변수와 달리 클래스 당
   하나씩만 생성되기 때문이다.
 - static 변수는 객체가 생성될 때마다 함께 생성되어 객체 별로 유지되는 변수가 아니다.
   객체를 생성하건 생성하지 않건 메모리 공간에 딱 하나만 할당이 되어서 공유되는 변수이다.
 - static 변수는 객체외부에 있다. 다만 객체에게 멤버변수처럼 접근할 수 있는 권한을 줬을 뿐이다.
 - static 변수는 객체들이 공유하는 구조이다. 그리고 생성 및 소멸의 시점도 전역변수와 동일하다.
