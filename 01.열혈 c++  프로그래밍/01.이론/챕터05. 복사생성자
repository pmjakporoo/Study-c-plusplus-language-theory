1. c++ 스타일의 초기화
  int num = 20;
  int &ref = num;
  과 같은 방식으로 변수와 참조자를 선언 및 초기화 가능하고,
  int num(20);
  int &ref(num);
  과 같은 방식도 가능하다. 즉, 위와 아래 방식이 동일하게 작동한다.

  class SoSimple {
    int num1;
    int num2;
  public:
    SoSimple(int n1, int n2): num1(n1), num2(n2) {}
    void ShowSimpleData() {
      cout << num1 << endl;
      cout << num2 << endl;
    }
  }

  int main(void) {
    SoSimple sim1(15, 20);
    SoSimple sim2 = sim1; // SoSimple sim2(sim1)과 같다.
    sim2.ShowSimpleData();
  }

   SoSimple sim2 = sim1는 sim2 객체를 새로 생성해서 객체 sim1과 sim2간의 멤버 대 맴버 복사가 일어난다.

  즉, 
  int num1=num2;
  int num1(num2);
  이 두문장이 동일한 의미로 해석되듯이,

  SoSimple sim2 = sim1;
  SoSimple sim2(sim1);도 동일한 의미로 해석이 된다.

2. SoSimple sim2(sim1)
  SoSimple형 객체를 생성한다.
  객체의 이름은 sim2이다.
  sim1을 인자로 받을 수 있는 생성자의 호출을 통해서 객체 생성을 완료한다.

  즉, 위의 객체 생성문에서 호출하고자 하는 생성자는 다음과 같이 SoSimple 객체를 인자로 받을 수 있는 생성자이다.
  SoSimple(const SoSimple &copy) { ... }

  그리고 다음의 문장도 
  SoSimple sim2 = sim1;
  실은 다음의 형태로 묵시적 변환이 되어서(자동으로 변환이 되어서) 객체가 생성되는 것이다.
  SoSimple sim2(sim1);

3. 디폴트 복사 생성자
  
