1. 객체 포인터 변수: 객체의 주소 값을 저장하는 포인터 변수
  - 클래스를 기반으로도 포인터 변수를 선언할 수 있다.
    ex) Person * ptr; // 포인터 변수 선언
        ptr = new Person(); // 포인터 변수의 객체 참조
        - Person형 포인터는 Person 객체 뿐만 아니라, Person을 상속하는 유도 클래스의 객체도 가리킬 수 있다.

        class Student : public Person {
          ...
        };

        - Person형 포인터 변수는 아래 문장에서 보이듯이 Student객체도 가리킬 수 있다.
        Person * ptr = new Student();

        - Student 클래스를 상속하는 유도 클래스 PartTimeStudent가 다음의 형태로 정의되었다고 가정하면,
          Class PartTimeStudent : public Student {
            ...
          };

          Person형 포인터 변수는 아래의 문장에서 보이듯이 PartTimeStudent 객체도 가리킬 수 있다.
          Person * ptr = new PartTimeStudent();
        - 뿐만 아니라, Student형 포인터 변수도 아래의 문장에서 보이듯이 PartTimeStudent 객체를 가리킬 수 있다.
          Student * ptr = new PartTimeStudent();
  - 즉, C++에서 AAA형 포인터 변수는 AAA 객체 또는 AAA를 직접 혹은 간접적으로 상속하는 모든 객체를 가리킬 수 있다.
    (객체의 주소값을 저장할 수 있다.)
    예제코드) ObjectPointer.cpp
    - Student 객체와 PartTimeStudent 객체를 Person 객체의 일종으로 간주한다.
    - PartTimeStudent 객체도 Student 객체의 일종으로 간주한다.

2. '오렌지미디어 급여 관리 확장성 문제'의 1차적 해결과 함수 오버라이딩
  예제코드) EmployeeManager2.cpp
  - EmployeeHandler 갹체가 여전히 PermanentWorker 객체를 저장 및 관리하고 있다.

  이러한 상황에서 다음 상황을 추가한다.
  - 정규직, 영업직, 임시직 모두 고용의 한 형태이다.
  - 영업직은 정규직의 일종이다.
  - 영업직의 급여 : 기본급여(월 기본급여) + 인센티브 형태
  - 임시직의 급여 : 시간당 급여 X 일한 시간의 형태



